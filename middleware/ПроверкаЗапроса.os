#Использовать fluent

Процедура ОбработкаВызова(КонтекстВызова) Экспорт

	Если НекорректныйТипКонтента() Тогда
		ОтветHTTP.КодСостояния = 415;
		Возврат;
	КонецЕсли;

	Если НекорректныйПринимаемыйТипОтвета() Тогда
		ОтветHTTP.КодСостояния = 406;
		Возврат;
	КонецЕсли;

	ПродолжитьОбработку();
КонецПроцедуры

Функция НекорректныйТипКонтента()

	Заголовки = ЗапросHTTP.Заголовки;
	ТипКонтента = Заголовки.Получить("Content-Type");

	МедиаТипJsonApi = "application/vnd.api+json";

	ЭтоТипКонтентаJSONApi = ТипКонтента <> Неопределено И СтрНачинаетсяС(ТипКонтента, МедиаТипJsonApi);
	ТипКонтентаСодержитПараметрыМедиаТипа = СтрНайти(ТипКонтента, ";") > 0;

	Возврат ЭтоТипКонтентаJSONApi И ТипКонтентаСодержитПараметрыМедиаТипа;

КонецФункции

Функция НекорректныйПринимаемыйТипОтвета()

	Заголовки = ЗапросHTTP.Заголовки;
	ПринимаемыеТипыОтвета = Заголовки.Получить("Accept");
	Если ПринимаемыеТипыОтвета = Неопределено Тогда
		ПринимаемыеТипыОтвета = "";
	КонецЕсли;

	МедиаТипJsonApi = "application/vnd.api+json";

	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("МедиаТип", МедиаТипJsonApi);

	ТипыОтветаJsonApi = ПроцессорыКоллекций.ИзСтроки(ПринимаемыеТипыОтвета, ",")
		.Обработать("Результат = СокрЛП(Элемент)")
		.Фильтровать("Результат = СтрНачинаетсяС(Элемент, ДополнительныеПараметры.МедиаТип)", ДополнительныеПараметры)
		.ВМассив();

	СредиТиповОтветовЕстьJsonApi = ТипыОтветаJsonApi.Количество() > 0;
	
	ВсеПринимаемыеТипыОтветаJsonApiМодифицированыПараметрами = ПроцессорыКоллекций.ИзКоллекции(ТипыОтветаJsonApi)
		.ВсеСоответствуют("Результат = СтрНайти(Элемент, "";"") > 0");

	Возврат СредиТиповОтветовЕстьJsonApi И ВсеПринимаемыеТипыОтветаJsonApiМодифицированыПараметрами;

КонецФункции